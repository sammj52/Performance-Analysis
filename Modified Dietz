'''This script performs Modified Dietz calculations within 1 month time periods. Written by Sam J.'''

'''This function calculated MD if the portfolio has no cash flows'''
def no_CF():
	bmv = input("Enter Beginning Market Value: ")
	bmv = float(bmv)

	emv = input("Enter Ending Market Value: ")
	emv = float(emv)	

	bamv = bmv
	eamv = emv

	ror = ((eamv/bamv)-1)*100
	print("The monthly performance is: " + str(ror) + "%.")


'''This function calculates MD if the only cash flows are on the 1st of the month'''
def first_of_month():
	bmv = input("Enter Beginning Market Value: ")
	bmv = float(bmv)

	emv = input("Enter Ending Market Value: ")
	emv = float(emv)

	cf = input("Enter Cash Flow from the 1st of the Month: ")
	cf = float(cf)

	bamv = bmv + cf 
	eamv = emv 

	ror = ((eamv/bamv)-1)*100
	print("The monthly performance is: " + str(ror) + "%.")


'''This function calculates MD if the only cash flows are on the middle day of the month'''
def middle_of_month():
	bmv = input("Enter Beginning Market Value: ")
	bmv = float(bmv)

	emv = input("Enter Ending Market Value: ")
	emv = float(emv)

	cf = input("Enter Cash Flow from the Middle of the Month: ")
	cf = float(cf)

	bamv = bmv + (cf/2)
	eamv = emv - (cf/2)

	ror = ((eamv/bamv)-1)*100

	print("The monthly performance is: " + str(ror) + "%.")


'''This function calculates MD if the cash flows are on a single day that isn't the first or middle day of the month'''
def single_flow():
	bmv = input("Enter Beginning Market Value: ")
	bmv = float(bmv)

	emv = input("Enter Ending Market Value: ")
	emv = float(emv)

	cf = input("Enter Single Cash Flow: ")
	cf = float(cf)

	day = input("Enter Date of Cash Flow: ")
	day = float(day)

	month_length = 31
	month = input("Enter Month (abbr.): ")
	if month.lower() == "apr":
		month_length -= 1 
	elif month.lower() == "jun":
		month_length -= 1
	elif month.lower()== "sept":
		month_length -= 1
	elif month.lower() == "nov":
		month_length -= 1
	elif month.lower() == "feb":
		leap = input("Is it a leap year? (y/n):")
		if leap.lower() == "y":
			month_length -= 2
		elif leap.lower() == "n":
			month_length -= 3
		else:
			print("Restart. Didn't type 'y' or 'n'.")

	tm = ((month_length + 1) - day)/month_length

	bod_or_eod = input("BOD or EOD Calculation? (bod/eod): ")
	if bod_or_eod.lower() == "eod":
		tm = ((month_length) - day)/month_length	

	bamv = bmv + (cf * tm)
	eamv = emv - (cf - (cf * tm))

	ror = ((eamv/bamv)-1)*100

	print("The monthly performance is: " + str(ror) + "%.")


'''This function calculates MD if there are cash flows on multiple days'''
def multiple_days():
	month_length = 31
	month = input("Enter Month (abbr.): ")
	if month.lower() == "apr":
		month_length -= 1 
	elif month.lower() == "jun":
		month_length -= 1
	elif month.lower()== "sept":
		month_length -= 1
	elif month.lower() == "nov":
		month_length -= 1
	elif month.lower() == "feb":
		leap = input("Is it a leap year? (y/n):")
		if leap.lower() == "y":
			month_length -= 2
		elif leap.lower() == "n":
			month_length -= 3
		else:
			print("Restart. Didn't type 'y' or 'n'.")

	bmv = input("Enter Beginning Market Value: ")
	bmv = float(bmv)

	emv = input("Enter Ending Market Value: ")
	emv = float(emv)

	empty_cf = " "
	cf = input("Enter All Cash Flows (sum if multiple on single day), (separate with space): ")
	cf_list = cf.split(empty_cf)

	empty_days = " "
	days = input("Enter All Days Corellating in Order to Cash Flows (separate with space): ")
	days_list = days.split(empty_days)

	bod_or_eod = input("Calculating for BOD or EOD?: ")
	if bod_or_eod.lower() == "bod":
		tm_list = []
		for day_num in days_list:
			item = int(day_num)
			tm = ((month_length + 1) - item)/month_length
			tm_list.append(tm) 
	elif bod_or_eod.lower() == "eod":
		tm_list = []
		for day_num in days_list:
			item = int(day_num)
			tm = ((month_length) - item)/month_length
			tm_list.append(tm) 
	else:
		print("Restart. Didn't type bod/eod correctly.")

	cfba_list = []
	for cf1, tm1 in zip(cf_list, tm_list):
		cfba_list.append(float(cf1) * tm1)
	#print(cfba_list)

	cfea_list = []
	for cf1, cfba1 in zip(cf_list, cfba_list):
		cfea_list.append(float(cf1) - cfba1)
	#print(cfea_list)

	cfba_total = sum(cfba_list)
	cfea_total = sum(cfea_list)

	bamv = bmv + cfba_total
	eamv = emv - cfea_total

	ror = ((eamv/bamv)-1)*100
	print("The monthly performance is " + str(ror) + "%.")
	

#no_CF()
#first_of_month()
#middle_of_month()
#single_flow()
multiple_days()
